% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cchart.R
\name{cchart}
\alias{cchart}
\title{Calculates Control Systems points}
\usage{
cchart(data, dates, values, points.vs.avg = 6, points.vs.sd = 4)
}
\arguments{
\item{data}{The input Data Frame containing the time series.}

\item{dates}{Column name for date values. Class should be date,
if not, will attempt to coerce using lubridate::mdy(dates),
assuming format is month-day-year.}

\item{values}{Column name for data points values. Class should be numeric,
if not, will attempt to coerce.}

\item{points.vs.avg}{For Mean Rule, establishes how many continuous points
should be above or below mean to define a system. Default to 6.}

\item{points.vs.sd}{For Standard Deviation Rule, establises how many continuous points
should be above or below two standard deviations to define a new system. Default to 4.}
}
\value{
The function will return an object of class cchart.
A list including the data frame with the system points, and column names of the time series.\cr
The data frame will include the submited time series and the followin new columns: \cr\cr
data.mean: the mean value for each system \cr
data.ll: the lower standard deviation of each system \cr
data.ul: the upper standard deviation of each system \cr
}
\description{
Control Charts made easy.
Calculates Control Systems for a time series.
The current distrubution uses two Control Rules to define systems:
1. Mean Rule: Six continuous points above or below mean. See points.vs.avg argument.
2. Standard Deviation Rule: Four points above or below SD. See points.vs.sd argument.
}
\examples{
# Create a random time series
set.seed(154)
time.series <- data.frame(t.dates = seq.Date(as.Date("2014-02-01"), as.Date("2016-08-01"), "month"),
               t.values = c(
               seq(0.1, 0.8, by = 0.1) * runif(8) + 3,
               seq(0.1, 0.7, by = 0.1) * runif(7) + 4,
               seq(0.1, 0.7, by = 0.1) * runif(7) + 5,
               seq(0.1, 0.4, by = 0.1) * runif(4) + 4,
               seq(0.1, 0.5, by = 0.1) * runif(5) + 4)
               )

# Execute function
control.chart.data <- cchart(time.series, "t.dates", "t.values")
print(control.chart.data)

# To extract only the data frame
control.chart.data[["data"]]

}

